{"version":3,"sources":["./src/app/Dk/parts/parts.component.ts","./src/app/Dk/parts/parts.component.html","./src/app/Dk/repair/repair.component.ts","./src/app/Dk/repair/repair.component.html","./src/app/UG/login/login.component.ts","./src/app/UG/login/login.component.html","./src/app/UG/forgotpassword/forgotpassword.component.ts","./src/app/UG/forgotpassword/forgotpassword.component.html","./src/app/Dk/successandfailure/successandfailure.component.ts","./src/app/Dk/successandfailure/successandfailure.component.html","./src/app/Dk/history/history.component.ts","./src/app/Dk/history/history.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/UG/Services/user.service.ts","./src/app/app.module.ts","./src/app/Dk/home/home.component.ts","./src/app/Dk/home/home.component.html","./src/app/Dk/track/track.component.ts","./src/app/Dk/track/track.component.html","./src/app/Dk/contact/contact.component.ts","./src/app/Dk/contact/contact.component.html","./src/app/Dk/profile/profile.component.ts","./src/app/Dk/profile/profile.component.html","./src/app/Dk/Services/user-services.service.ts","./src/app/Dk/notifications/notifications.component.ts","./src/app/Dk/notifications/notifications.component.html","./src/app/app-routing.module.ts","./src/app/Dk/header/header.component.ts","./src/app/Dk/header/header.component.html","./src/app/Dk/footer/footer.component.ts","./src/app/Dk/footer/footer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/UG/reset-password/reset-password.component.ts","./src/app/UG/reset-password/reset-password.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\nexport interface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-parts',\r\n  templateUrl: './parts.component.html',\r\n  styleUrls: ['./parts.component.css']\r\n})\r\nexport class PartsComponent implements OnInit {\r\n\r\n\r\n  foods: Food[] = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n\r\n\r\n  isLinear = true;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n"," <div class=\"container\">\r\n  <div class=\"jumbotron\">\r\n<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"firstFormGroup\">\r\n    <form [formGroup]=\"firstFormGroup\">\r\n      <ng-template matStepLabel>Step 1</ng-template>\r\n\r\n\r\n<div class=\"row\"> \r\n<div class=\"col-sm-4\">\r\n\r\n<h2>Choose category</h2>\r\n<mat-form-field>\r\n<mat-label>Favorite food</mat-label>\r\n<mat-select formControlName=\"firstCtrl\">\r\n<mat-option *ngFor=\"let food of foods\" [value]=\"food.value\" >\r\n{{food.viewValue}}\r\n</mat-option>\r\n</mat-select>\r\n</mat-form-field>\r\n\r\n</div>\r\n<div class=\"col-sm-4\"> \r\n\r\n<h2>Choose parts</h2>\r\n<mat-form-field>\r\n<mat-label>Favorite food</mat-label>\r\n<mat-select formControlName=\"firstCtrl\">\r\n<mat-option *ngFor=\"let food of foods\" [value]=\"food.value\" >\r\n{{food.viewValue}}\r\n</mat-option>\r\n</mat-select>\r\n</mat-form-field>\r\n\r\n</div>\r\n<div class=\"col-sm-4\"> </div>\r\n</div>\r\n\r\n \r\n      <div>\r\n        <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"secondFormGroup\">\r\n    <form [formGroup]=\"secondFormGroup\">\r\n      <ng-template matStepLabel>Step 2</ng-template>\r\n     <mat-form-field class=\"example-full-width\">\r\n    <textarea matInput placeholder=\"Delivery address\" formControlName=\"secondCtrl\" rows=\"5\"></textarea>\r\n  </mat-form-field>\r\n      <div>\r\n        <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>&nbsp;\r\n        <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Step 3</ng-template>\r\n    \r\n<div class=\"row\"> \r\n<div class=\"col-sm-4\">\r\n\r\n<h2>Final confirmation</h2>\r\n \r\n Category : abc <br>\r\n\r\n Address : abd <br>\r\n\r\n</div>\r\n</div>\r\n \r\n\r\n\r\n    <div>\r\n      <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>&nbsp;\r\n      <button mat-raised-button color=\"primary\" (click)=\"stepper.reset()\">Reset</button>&nbsp;\r\n        <button mat-raised-button color=\"accent\">Submit</button>\r\n\r\n    </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {User} from '../Models/user.model';\r\nimport { UserServicesService } from '../Services/user-services.service';\r\nimport{ Brands } from '../Models/brands';\r\ninterface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n@Component({\r\n  selector: 'app-repair',\r\n  templateUrl: './repair.component.html',\r\n  styleUrls: ['./repair.component.css']\r\n})\r\nexport class RepairComponent implements OnInit {\r\nisLinear = true;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n//Brands : User[];\r\nBrand_list : Brands[];\r\n\r\n\r\n    foods: Food[] = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n\r\n  constructor(private _formBuilder: FormBuilder , private UserServices:UserServicesService) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.UserServices\r\n    .getUsers()\r\n    .subscribe((data:any) => {  \r\n      this.Brand_list = data; \r\n    });\r\n\r\n \r\n    this.firstFormGroup = this._formBuilder.group({\r\n      product_name: ['', Validators.required],\r\n      brands_name: ['',Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n\r\n  }\r\n \r\n}","\r\n<div class=\"container  \">\r\n  <div class=\"jumbotron\">\r\n \r\n<mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n  <mat-step [stepControl]=\"firstFormGroup\">\r\n    <form [formGroup]=\"firstFormGroup\" >\r\n      <ng-template matStepLabel>Product Details</ng-template>\r\n      <div class=\"row\"> \r\n        <div class=\"col-sm-4\"> \r\n      <mat-form-field>\r\n        <mat-label>Product Name</mat-label>\r\n        <input matInput placeholder=\"Product Name\" formControlName=\"product_name\" required>\r\n      </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-4\"> \r\n          <mat-form-field>\r\n  <mat-label>Choose category</mat-label>\r\n  <mat-select>\r\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n      {{food.viewValue}}\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n        </div>\r\n        <div class=\"col-sm-4\"> \r\n          <mat-form-field>\r\n  <mat-label>Choose Faults</mat-label>\r\n  <mat-select>\r\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n      {{food.viewValue}}\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n        </div>\r\n        <div class=\"col-sm-8\"> \r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>Leave a comment</mat-label>\r\n    <textarea matInput placeholder=\"Ex. It makes me feel...\"></textarea>\r\n  </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-sm-4\"> \r\n          <mat-form-field>\r\n  <mat-label>Choose Brand</mat-label>\r\n  <mat-select formControlName=\"brands_name\">\r\n    <mat-option *ngFor=\"let brand of Brand_list\" [value]=\"brand.Brand_id\">\r\n      {{brand.Brand_name}}\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div>\r\n\r\n\r\n\r\n\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step [stepControl]=\"secondFormGroup\" label=\"Confirm your address\">\r\n    <form [formGroup]=\"secondFormGroup\">\r\n  \r\n  <div class=\"row\">\r\n        <div class=\"col-sm-8\"> \r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>Your address</mat-label>\r\n    <textarea matInput formControlName=\"secondCtrl\" placeholder=\"Ex. It makes me feel...\"></textarea>\r\n  </mat-form-field>\r\n\r\n        </div>\r\n  </div>\r\n\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </form>\r\n  </mat-step>\r\n  <mat-step>\r\n    <ng-template matStepLabel>Confirm</ng-template> <br>\r\n     \r\n      <p>Dear User,\r\nYou are about to raise a repair request to Blackwhite technologies with the below details.</p>\r\n\r\n<mat-divider></mat-divider>\r\n<br>\r\nProduct name : abc <br>\r\nProduct Category : abcd <br>\r\nProduct brand : abcd <br>\r\nProduct faults : <br>\r\nAddress : abc <br>\r\n\r\n\r\n <br>\r\n    <div>\r\n      <button mat-button matStepperPrevious>Back</button>&nbsp;\r\n      <button mat-raised-button color=\"warn\" (click)=\"stepper.reset()\">Reset</button>&nbsp;\r\n      <button mat-raised-button color=\"primary\" >Confirm</button>&nbsp;\r\n    </div>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SocialAuthService, SocialLoginModule } from 'angularx-social-login';\nimport { SocialUser } from 'angularx-social-login';\nimport { UserService } from '../Services/user.service';\nimport { FormGroup, FormControl, Validators,FormBuilder } from '@angular/forms';\nimport {\n  GoogleLoginProvider,\n  FacebookLoginProvider,\n  AmazonLoginProvider,\n  VKLoginProvider,\n} from 'angularx-social-login';\n\n//import { UserService } from '../Services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [SocialLoginModule, SocialAuthService]\n})\nexport class LoginComponent implements OnInit {\n\n  user: SocialUser;\n  submitted = false;\n  form: FormGroup;\n\n  constructor(private authService: SocialAuthService, private router: Router,\n     private userService: UserService,\n     private readonly fb: FormBuilder) {\n       \n      this.form = this.fb.group({\n        email: [],\n        password:[],\n        firstName:[],\n        userName:[],\n        confirmPassword:[]\n       });\n     }\n\nngOnInit() {\n\n    const signUpButton = document.getElementById('signUp');\nconst signInButton = document.getElementById('signIn');\nconst container = document.getElementById('container');\n\nsignUpButton.addEventListener('click', () => {\n  container.classList.add(\"right-panel-active\");\n});\n\nsignInButton.addEventListener('click', () => {\n  container.classList.remove(\"right-panel-active\");\n});\n\n\n\n   /* this.authService.authState.subscribe(user => {\n      this.user = user;\n\n     this.socialDetails(this.user);\n\n    });*/\n  }\n\n  \n \n /* socialDetails(socialUser: SocialUser){\n\n    console.log(\"socialUser========\"+socialUser)\n\n    this.userService.addUser(socialUser)\n      .subscribe( data => {\n        console.log(data);\n        this.router.navigate(['']);\n      });\n\n   }*/\n\n\n  /*signInWithGoogle(): void {\n    \n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }*/\n  async signInWithGoogle(): Promise<any> {  \n\n    this.user=await this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    console.log(this.user);\n    this.router.navigate(['Dashboard']).then(() => {\n      window.location.reload();\n    });\n    //coommeted for temprory pupose above code is hardcoded \n    /*this.userService.socialRegister(this.user).subscribe( data => {\n        console.log(data);\n        this.router.navigate(['Dashboard']);\n      });*/\n  }\n\n\n  signInWithFB(): void {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\n  }\n\n  signInWithAmazon(): void {\n    this.authService.signIn(AmazonLoginProvider.PROVIDER_ID);\n  }\n\n  signInWithVK(): void {\n    this.authService.signIn(VKLoginProvider.PROVIDER_ID);\n  }\n\n  signOut(): void {\n    this.authService.signOut();\n  }\n  login(){\n    \n  }\n\n  submitForm() {\n    this.userService.registerUser(this.form.getRawValue()).subscribe( data => {\n      console.log(data);\n      this.form.reset();\n      this.router.navigate(['Successorfailure']);\n    });\n\n  }\n  loginsubmit()\n    {\n      console.log(this.form.getRawValue());\n      if(this.form.getRawValue().email==null){\n\n       \n\n      }\n      else{\n        this.userService.loginUser(this.form.getRawValue()).subscribe( data => {\n          console.log(data);\n          this.form.reset();\n          this.router.navigate(['Dashboard']);\n        });\n\n      }\n      \n      \n    }\n\n}\n","<link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n\n \n<div class=\"container\" id=\"container\">\n  <div class=\"form-container sign-up-container\">\n<div     class=\"form mt-4 bg\" >\n  <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\n  \n      <h1>Create Account</h1>\n      <div class=\"social-container\">\n        <div class=\"card-block\">\n          <button class=\"btn btn-social-icon btn-google mx-1\" (click)=\"signInWithGoogle()\"><span class=\"fa fa-google\"></span></button>\n          <button class=\"btn btn-social-icon btn-facebook mx-1\" (click)=\"signInWithFB()\"><span class=\"fa fa-facebook\"></span></button>\n         <!-- <button class=\"btn btn-social-icon btn-amazon mx-1\" (click)=\"signInWithAmazon()\"><span class=\"fa fa-amazon\"></span></button>-->\n          <button class=\"btn btn-social-icon btn-amazon mx-1\" (click)=\"signInWithVK()\"><span class=\"fa fa-vk\"></span></button>\n        </div>\n      </div>\n      <span>or use your email for registration</span>\n      <input type=\"text\" placeholder=\"Name\" [formControlName]=\"'firstName'\"/>\n      <input type=\"text\" placeholder=\"User Name\" [formControlName]=\"'userName'\"/>\n      <input type=\"email\" placeholder=\"Email\" [formControlName]=\"'email'\"/>\n      <input type=\"password\" placeholder=\"Password\" [formControlName]=\"'password'\"/>\n      <input type=\"password\" placeholder=\"Confirm Password\" [formControlName]=\"'confirmPassword'\"/>\n      <button>Sign Up</button>\n    </form>\n</div>\n  </div>\n  <form [formGroup]=\"form\" (ngSubmit)=\"loginsubmit()\">\n  <div class=\"form-container sign-in-container\">\n<div     class=\"form mt-4 bg\" (submit)=\"login()\">\n      <h1>Sign in</h1>\n      <div class=\"social-container\">\n  <!-- <a href=\"\">\n     <img src=\"../assets/images/fb.png\" alt=\"\" class=\"fb_icon social\">\n   </a>   \n   <a href=\"\">\n     <img src=\"../assets/images/google.png\" alt=\"\" class=\"fb_icon social\" (click)=\"signInWithGoogle()\">\n   </a>   \n   <a href=\"\">\n     <img src=\"../assets/images/twitter.png\" alt=\"\" class=\"fb_icon social\">\n   </a>-->\n    <div class=\"card-block\">\n      <button class=\"btn btn-social-icon btn-google mx-1\" (click)=\"signInWithGoogle()\"><span class=\"fa fa-google\"></span></button>\n      <button class=\"btn btn-social-icon btn-facebook mx-1\" (click)=\"signInWithFB()\"><span class=\"fa fa-facebook\"></span></button>\n    <!-- <button class=\"btn btn-social-icon btn-amazon mx-1\" (click)=\"signInWithAmazon()\"><span class=\"fa fa-amazon\"></span></button>-->\n      <button class=\"btn btn-social-icon btn-amazon mx-1\" (click)=\"signInWithVK()\"><span class=\"fa fa-vk\"></span></button>\n    </div>\n\n         \n      </div>\n      <span>or use your account</span>\n      <input type=\"email\" placeholder=\"Email\"[formControlName]=\"'email'\"/>\n      <input type=\"password\" placeholder=\"Password\"[formControlName]=\"'password'\"/>\n      <a  routerLink=\"Forgotpassword\">Forgot your password?</a>\n      <button class=\"buttonStyle\">Sign In</button>\n    </div>\n  </div>\n  </form>\n  <div class=\"overlay-container\">\n    <div class=\"overlay\">\n      <div class=\"overlay-panel overlay-left\">\n        <h1>Welcome Back!</h1>\n        <p>To keep connected with us please login with your personal info</p>\n        <button class=\"ghost\" id=\"signIn\">Sign In</button>\n      </div>\n      <div class=\"overlay-panel overlay-right\">\n        <h1>Hello, Friend!</h1>\n        <p>Enter your personal details and start journey with us</p>\n        <button class=\"ghost\" id=\"signUp\">Sign Up</button>\n      </div>\n    </div>\n  </div>\n</div>\n<!--\n<footer>\n  <p>\n    Created with <i class=\"fa fa-heart\"></i> by\n    <a target=\"_blank\" href=\"https://florin-pop.com\">Florin Pop</a>\n    - Read how I created this and how you can join the challenge\n    <a target=\"_blank\" href=\"https://www.florin-pop.com/blog/2019/03/double-slider-sign-in-up-form/\">here</a>.\n  </p>\n</footer>\n--> \n\n<!--<div class=\"jumbotron bg-transparent text-center\">\n    <form  >\n    <div *ngIf=\"!user\" class=\"card text-center\">\n      <h6 class=\"card-header\">\n        Repair Application\n      </h6>\n      <div class=\"card-block\">\n        <h4 class=\"card-title\">Not signed in</h4>\n        <p class=\"card-text\">Sign in with</p>\n      </div>\n      <div class=\"card-block\">\n        <button class=\"btn btn-social-icon btn-google mx-1\" (click)=\"signInWithGoogle()\"><span class=\"fa fa-google\"></span></button>\n        <button class=\"btn btn-social-icon btn-facebook mx-1\" (click)=\"signInWithFB()\"><span class=\"fa fa-facebook\"></span></button>\n        <button class=\"btn btn-social-icon btn-amazon mx-1\" (click)=\"signInWithAmazon()\"><span class=\"fa fa-amazon\"></span></button>\n        <button class=\"btn btn-social-icon btn-amazon mx-1\" (click)=\"signInWithVK()\"><span class=\"fa fa-vk\"></span></button>\n      </div>\n    </div>\n    <div *ngIf=\"user\" class=\"card text-center\">\n      <h6 class=\"card-header\">\n        Repair Application\n      </h6>\n      <div class=\"card-block\"></div>\n      <img *ngIf=\"user.photoUrl\" class=\"card-img-top img-responsive photo\" src=\"{{ user.photoUrl }}\">\n      <div class=\"card-block\">\n        <h4 class=\"card-title\">{{ user.name }}</h4>\n        <p class=\"card-text\">{{ user.email }}</p>\n        <p class=\"card-text\">Logged in with {{ user.provider }}</p>\n      </div>\n      <div class=\"card-block\">\n        <button class=\"btn btn-danger\" (click)=\"signOut()\">Sign out</button>\n      </div>\n    </div>\n    </form>\n  </div>-->\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { UserService } from '../Services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n\n\n  RequestResetForm: FormGroup;\n  forbiddenEmails: any;\n  errorMessage: string;\n  successMessage: string;\n  IsvalidForm = true;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n   ) {\n\n  }\n\n\n  ngOnInit() {\n\n    this.RequestResetForm = new FormGroup({\n      'email': new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails),\n    });\n  }\n\n\n  RequestResetUser(form) {\n    console.log(form)\n    if (form.valid) {\n      this.IsvalidForm = true;\n      this.userService.requestReset(this.RequestResetForm.value).subscribe(\n        data => {\n          this.RequestResetForm.reset();\n          this.successMessage = \"Reset password link send to email sucessfully.\";\n          setTimeout(() => {\n            this.successMessage = null;\n            this.router.navigate(['Login']);\n          }, 3000);\n        },\n        err => {\n\n          if (err.error.message) {\n            this.errorMessage = err.error.message;\n          }\n        }\n      );\n    } else {\n      this.IsvalidForm = false;\n    }\n  }\n\n}\n","<div class=\"container-fluid form\">\n    <div class=\"row form-row \">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Forgot Password</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"email\"\n                                    type=\"text\" id=\"email\" formControlName=\"email\" />\n                                <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\"\n                                    class=\"help-block\">Please enter a valid email!</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n                                    <button type=\"submit\" class=\" btn btn-primary\">Reset\n                                        Password</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-successandfailure',\n  templateUrl: './successandfailure.component.html',\n  styleUrls: ['./successandfailure.component.css']\n})\nexport class SuccessandfailureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Register Process succesfully completed</p>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-history',\r\n  templateUrl: './history.component.html',\r\n  styleUrls: ['./history.component.css']\r\n})\r\nexport class HistoryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\"> \r\n  <div class=\"jumbotron\">\r\n     \r\n    <ul class=\"timeline\">\r\n        <li>\r\n          <div class=\"timeline-badge\"></div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">Iphone 7</h4>\r\n              <p><small class=\"text-muted\"><i class=\"glyphicon glyphicon-time\"></i> 11/11/2020</small></p>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n               Iphone 7 have been repaired for the screen broken issue. Total payment 43$ has been paid. \r\n            </div>\r\n          </div>\r\n        </li>\r\n        <li class=\"timeline-inverted\">\r\n          <div class=\"timeline-badge\"></div>\r\n          <div class=\"timeline-panel\">\r\n            <div class=\"timeline-heading\">\r\n              <h4 class=\"timeline-title\">Samsung LED Tv</h4>\r\n                            <p><small class=\"text-muted\"><i class=\"glyphicon glyphicon-time\"></i> 23/11/2020</small></p>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n               Samsung LED tv has been repaired and paird 33$ with cash. Extra covering parts also requested.\r\n            </div>\r\n          </div>\r\n        </li>\r\n        \r\n    </ul>\r\n</div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'The-Repair-application';\r\n}\r\n"," \r\n<app-header></app-header>\r\n    \r\n<router-outlet></router-outlet>\r\n ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { SocialUser } from 'angularx-social-login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  baseurl: string = \"http://localhost:4000/\";\n\n \n\n  socialRegister(userDetails: SocialUser){\n\n    console.log(\"service==================>\"+JSON.stringify(userDetails));\n    return this.http.post(this.baseurl + 'accounts/socialRegister', userDetails);\n  }\n\n  registerUser(registrationDetails: any){\n\n    console.log(\"registrationDetails==================>\"+JSON.stringify(registrationDetails));\n    return this.http.post(this.baseurl + 'accounts/register', registrationDetails);\n    //return 'success';\n  }\n\n  loginUser(loginDetails:any){\n    console.log(\"loginDetails==================>\"+JSON.stringify(loginDetails));\n    return this.http.post(this.baseurl + 'accounts/authenticate', loginDetails);\n  }\n\n  requestReset(requestedEmail:any){\n\n    return null;\n\n  }\n\n  /*getAllProducts(){\n    return this.http.get<ProductModel[]>(this.baseurl + 'Products');\n  }\n\n  getProductById(id: string){\n    return this.http.get<ProductModel>(this.baseurl + 'Products' + '/' + id);\n  }\n\n  addProduct(product: ProductModel){\n    return this.http.post(this.baseurl + 'Products', product);\n  }\n\n  deleteProduct(id: string){\n    return this.http.delete(this.baseurl + 'Products' + '/' + id);\n  }\n\n  updateProduct(product: ProductModel){\n    return this.http.put(this.baseurl + 'Products' + '/' + product._id, product);\n  }*/\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n \r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { HomeComponent } from './Dk/home/home.component';\r\nimport { HeaderComponent } from './Dk/header/header.component';\r\nimport { FooterComponent } from './Dk/footer/footer.component';\r\n import { ContactComponent } from './Dk/contact/contact.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatCardModule} from '@angular/material/card';\r\n import {MatInputModule} from '@angular/material/input';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { ReactiveFormsModule} from '@angular/forms';\r\n import { HttpClientModule } from \"@angular/common/http\";\r\nimport { ProfileComponent } from './Dk/profile/profile.component';\r\nimport { NotificationsComponent } from './Dk/notifications/notifications.component';\r\nimport { RepairComponent } from './Dk/repair/repair.component';\r\nimport { HistoryComponent } from './Dk/history/history.component';\r\nimport { TrackComponent } from './Dk/track/track.component';\r\n//import { LoginComponent } from './Dk/login/login.component';\r\nimport { LoginComponent } from './UG/login/login.component';\r\nimport { PartsComponent } from './Dk/parts/parts.component';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport { SuccessandfailureComponent } from './Dk/successandfailure/successandfailure.component';\r\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\nimport {UserService} from './UG/Services/user.service';\r\nimport {\r\n  GoogleLoginProvider,\r\n  FacebookLoginProvider,\r\n  AmazonLoginProvider,\r\n  VKLoginProvider\r\n} from 'angularx-social-login';\r\n\r\nimport { FormsModule } from '@angular/forms';\nimport { ForgotpasswordComponent } from './UG/forgotpassword/forgotpassword.component';\nimport { ResetPasswordComponent } from './UG/reset-password/reset-password.component';\r\n \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    FooterComponent, \r\n    ContactComponent,\r\n    ProfileComponent,\r\n    NotificationsComponent,\r\n    RepairComponent,\r\n    HistoryComponent,\r\n    TrackComponent,\r\n    LoginComponent,\r\n    PartsComponent,\r\n    SuccessandfailureComponent,\r\n    ForgotpasswordComponent,\r\n    ResetPasswordComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    HttpClientModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule, \r\n    ReactiveFormsModule,\r\n    MatStepperModule,\r\n    FormsModule,\r\n    SocialLoginModule\r\n     \r\n  ],\r\n  providers: [{\r\n    provide: 'SocialAuthServiceConfig',\r\n    useValue: {\r\n      autoLogin: true,\r\n      providers: [\r\n        {\r\n          id: GoogleLoginProvider.PROVIDER_ID,\r\n          provider: new GoogleLoginProvider(\r\n            //'624796833023-clhjgupm0pu6vgga7k5i5bsfp6qp6egh.apps.googleusercontent.com'\r\n           '890970447819-cb2glbl2hbcjq81s9gubhh1kbr747b92.apps.googleusercontent.com'\r\n          ),\r\n        },\r\n        {\r\n          id: FacebookLoginProvider.PROVIDER_ID,\r\n          provider: new FacebookLoginProvider('561602290896109'),\r\n        },\r\n        {\r\n          id: AmazonLoginProvider.PROVIDER_ID,\r\n          provider: new AmazonLoginProvider(\r\n            'amzn1.application-oa2-client.f074ae67c0a146b6902cc0c4a3297935'\r\n          ),\r\n        },\r\n        {\r\n          id: VKLoginProvider.PROVIDER_ID,\r\n          provider: new VKLoginProvider(\r\n            '7624815'\r\n          ),\r\n        },\r\n      ],\r\n    } as SocialAuthServiceConfig,\r\n  },\r\n  UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SocialAuthService, SocialUser } from 'angularx-social-login';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  user: SocialUser;\r\n\r\n  constructor(private authService: SocialAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n     this.authService.authState.subscribe(user => {\r\n      console.log(user);\r\n      this.user = user;\r\n\r\n      });\r\n    \r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n ","\r\n<div class=\"container\">\r\n  <div class=\"jumbotron\">\r\n    <div *ngIf=\"user\">\r\n  <h1>Welcome {{ user.name }}</h1>\r\n  </div>\r\n  <div *ngIf=\"!user\">\r\n    <h1>Welcome User</h1>\r\n    </div>\r\n  <p> To Blackwhite technologies repair application management tool.  \r\n  </p>\r\n  <br>\r\n    <div class=\"row\"> \r\n      <div class=\"col-sm-4\"> \r\n        <mat-card>\r\n          <mat-card-header  class=\"dk_no_margin\">\r\n          <mat-card-title>Order status <mat-icon>alarm</mat-icon></mat-card-title>\r\n          <mat-card-subtitle>Your recent order status</mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n          Your product Iphone 7 is under repairing. \r\n          <br>\r\n          <div class=\"progress\">\r\n          <div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\"\r\n          aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:40%\">\r\n          40%\r\n          </div>\r\n          </div>\r\n          <br>\r\n          Estimated hours to complete is 7 hrs\r\n          </mat-card-content>\r\n          <mat-card-actions>\r\n          <button mat-raised-button color=\"primary\">Go to tracking</button>\r\n          <button mat-raised-button color=\"warn\">Contact</button>\r\n          </mat-card-actions>\r\n        </mat-card> \r\n      </div>\r\n      <div class=\"col-sm-4\"> \r\n        <mat-card>\r\n          <mat-card-header  class=\"dk_no_margin\">\r\n          <mat-card-title>Previous orders <mat-icon>timeline</mat-icon></mat-card-title>\r\n          <mat-card-subtitle>Your previous successfull orders</mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content> \r\n          <mat-list  >\r\n          <mat-list-item> Samsung Laptop 2Gb </mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item> Real me 5s </mat-list-item> \r\n          </mat-list>\r\n          </mat-card-content>\r\n          <mat-card-actions>\r\n          <button mat-raised-button color=\"primary\">Go to tracking</button>\r\n          <button mat-raised-button color=\"warn\">Contact</button>\r\n          </mat-card-actions>\r\n        </mat-card> \r\n      </div>\r\n      <div class=\"col-sm-4\"> \r\n        <mat-card>\r\n          <mat-card-header  class=\"dk_no_margin\">\r\n          <mat-card-title>Recent notifications <mat-icon>add_alert</mat-icon></mat-card-title>\r\n          <mat-card-subtitle>Your most recent notifications</mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content> \r\n          <mat-list  >\r\n          <mat-list-item> Your Laptop has been repaired . </mat-list-item>\r\n          <mat-divider></mat-divider>\r\n          <mat-list-item> Your repair request has accepted. </mat-list-item>\r\n          </mat-list>\r\n          </mat-card-content>\r\n          <mat-card-actions>\r\n          <button mat-raised-button color=\"primary\">Go to tracking</button>\r\n          <button mat-raised-button color=\"warn\">Contact</button>\r\n          </mat-card-actions>\r\n        </mat-card> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-track',\r\n  templateUrl: './track.component.html',\r\n  styleUrls: ['./track.component.css']\r\n})\r\nexport class TrackComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n"," \r\n<div class=\"container  \">\r\n  <div class=\"jumbotron\">\r\n  \r\n\r\n  <div class=\"timeline\">\r\n    <ul>\r\n      <li>\r\n        <span>11/02/2020</span>\r\n        <div class=\"content\">\r\n          <h3>Your HP Laptop has repair request has been recived</h3>\r\n          <p>\r\n            Fault : Screen damaged <br>\r\n            Product name : HP Pavelion B2 Laptop <br>\r\n            Time : 11:02:2020 09.20am <br>\r\n          </p>\r\n        </div>\r\n      </li>\r\n          <li>\r\n        <span>12/02/2020</span>\r\n        <div class=\"content\">\r\n          <h3>Your HP Laptop has repair request has been opened</h3>\r\n          <p>\r\n            Fault : Screen damaged <br>\r\n            Product name : HP Pavelion B2 Laptop <br>\r\n            Time : 12:02:2020 09.20am <br>\r\n            Technition : Jo mathew\r\n          </p>\r\n        </div>\r\n      </li>\r\n          <li>\r\n        <span>13/02/2020</span>\r\n        <div class=\"content\">\r\n          <h3>Your HP Laptop is under repairing</h3>\r\n          <p>\r\n            Fault : Screen damaged <br>\r\n            Product name : HP Pavelion B2 Laptop <br>\r\n            Time : 13:02:2020 03.20am <br>\r\n            Technition : Jo mathew\r\n          </p>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n </div>\r\n</div>","import { Component, OnInit } from '@angular/core'; \r\n\r\n\r\nexport interface Categorytypes {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\n \r\n\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n    Categories : Categorytypes [] = [\r\n    {value: 'Mobile-phones', viewValue: 'Mobile phones'},\r\n    {value: 'Television', viewValue: 'Television'},\r\n    {value: 'Computers', viewValue: 'Computers'}\r\n  ];    \r\n  subCategories : Categorytypes [] = [\r\n    {value: 'Samsung', viewValue: 'Samsung'},\r\n    {value: 'Nokia', viewValue: 'Nokia'},\r\n    {value: 'Iphone', viewValue: 'Iphone'}\r\n  ];    \r\n  Faults : Categorytypes [] = [\r\n    {value: 'Promax', viewValue: 'Screen broken'},\r\n    {value: 'X3', viewValue: 'Battery is dead'},\r\n    {value: 'Z1', viewValue: 'Dropped in water'}\r\n  ];\r\n \r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n  <div class=\"jumbotron\">\r\n     <h1>Contact us</h1>\r\n  <p> We will be responding for your enquiries as soon as possbile.  \r\n  </p>\r\n<br>\r\n\r\n\r\n<mat-card>\r\n<div class=\"row\"> \r\n  <div class=\"col-sm-4\"> \r\n <mat-form-field class=\"example-full-width\">\r\n    <mat-label>Product name</mat-label>\r\n    <input matInput  value=\"\">\r\n  </mat-form-field>   \r\n  </div>\r\n  <div class=\"col-sm-4\">\r\n  <mat-form-field class=\"example-full-width\">\r\n  <mat-label>Please select  category</mat-label>\r\n  <mat-select   required>\r\n  <mat-option>--</mat-option>\r\n  <mat-option *ngFor=\"let subCategories of subCategories\" [value]=\"subCategories.value\" >\r\n  {{subCategories.viewValue}}\r\n  </mat-option>\r\n  </mat-select>\r\n  </mat-form-field>\r\n  </div>\r\n  <div class=\"col-sm-4\"> \r\n  <mat-form-field class=\"example-full-width\">\r\n  <mat-label>Please select a fault</mat-label>\r\n  <mat-select   required>\r\n  <mat-option>--</mat-option>\r\n  <mat-option *ngFor=\"let Faults of Faults\" [value]=\"Faults.value\" >\r\n  {{Faults.viewValue}}\r\n  </mat-option>\r\n  </mat-select>\r\n  </mat-form-field>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\"> \r\n<div class=\"col-sm-8\"> \r\n \r\n \r\n<mat-form-field class=\"example-full-width\">\r\n    <textarea matInput placeholder=\"Leave your enquiries\" rows=\"5\"></textarea>\r\n  </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"primary\">Send <mat-icon>send </mat-icon> </button>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n</mat-card>\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n import { HttpClient } from \"@angular/common/http\";\r\n import { Injectable } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport { SocialAuthService, SocialUser } from 'angularx-social-login';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\n@Injectable()\r\nexport class ProfileComponent implements OnInit {\r\nperson;\r\n\r\n  user_profile = new FormGroup({\r\n     full_name: new FormControl(),\r\n     user_email: new FormControl(),\r\n     user_address: new FormControl(),\r\n     user_dob: new FormControl(),\r\n     user_phone: new FormControl()\r\n});\r\nuser: SocialUser;\r\n\r\n  constructor (private http:HttpClient,private authService: SocialAuthService){ }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.authService.authState.subscribe(user => {\r\n     this.user = user;\r\n\r\n     });\r\n   \r\n }\r\n \r\n   getData(){\r\n\r\nthis.person = this.http.get('/backend/usersw').subscribe(response => console.log(response));\r\n\r\n  \r\n  }\r\n}\r\n","\r\n<div class=\"container  \">\r\n  <div class=\"jumbotron\">\r\n    <form [formGroup]=\"user_profile\" novalidate>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-4\"></div>\r\n      <div class=\"col-sm-4\">\r\n      <!--<img src=\"../assets/images/user_default.png\" class=\"user_img\">-->\r\n      <img *ngIf=\"user.photoUrl\" class=\"card-img-top img-responsive photo user_img\" src=\"{{ user.photoUrl }}\">\r\n      </div>\r\n      <div class=\"col-sm-4\"></div>    \r\n    </div>\r\n\r\n    <div class=\"row\"> \r\n      <div class=\"col-sm-4\"> \r\n        <div class=\"  dk_bottom_margin\">\r\n          <mat-card>\r\n          <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Your full name\" value=\"\" formControlName=\"full_name\">   \r\n          <mat-icon matSuffix>mode_edit</mat-icon>\r\n          </mat-form-field>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    <div class=\"col-sm-4\"> \r\n      <div class=\"  dk_bottom_margin\">\r\n        <mat-card>  \r\n        <mat-form-field class=\"example-full-width\">\r\n        <span matPrefix>+353 &nbsp;</span>\r\n        <input type=\"tel\" matInput placeholder=\"Telephone\" formControlName=\"user_phone\">\r\n        <mat-icon matSuffix>mode_edit</mat-icon>\r\n        </mat-form-field>\r\n        </mat-card> \r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-4\"> \r\n      <div class=\"  dk_bottom_margin\">\r\n        <mat-card>\r\n        <mat-form-field class=\"example-full-width\">\r\n        <input matInput placeholder=\"Email ID\" value=\"\" formControlName=\"user_email\">\r\n        <mat-icon matSuffix>mode_edit</mat-icon>\r\n        </mat-form-field>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8\"> \r\n      <div class=\"  dk_bottom_margin\">\r\n        <mat-card>\r\n        <mat-form-field class=\"example-full-width\">\r\n        <textarea matInput placeholder=\"Address\" rows=\"5\" formControlName=\"user_address\"></textarea>\r\n        <mat-icon matSuffix>mode_edit</mat-icon>\r\n        </mat-form-field>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-4\"> \r\n      <div class=\"  dk_bottom_margin\">\r\n        <mat-card>\r\n        <mat-form-field>\r\n        <input matInput [matDatepicker]=\"picker\" placeholder=\"Date of birth\" formControlName=\"user_dob\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n        <mat-icon matSuffix>mode_edit</mat-icon>\r\n        </mat-form-field>\r\n        </mat-card>\r\n      </div>\r\n      <button mat-raised-button color=\"primary\" (click)=\"getData()\">Update info \r\n        <span class=\"glyphicon glyphicon-send \r\n\"></span>\r\n      </button>\r\n    </div>\r\n    </div>\r\n  </form>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {User} from '../Models/user.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as Rx from \"rxjs/Rx\";\r\nimport { from, Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport{ Brands } from '../Models/brands';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserServicesService {\r\n\r\nBrands_list : User[]=[\r\n{\r\n  Brand_id : 1,\r\n  Brand_name:\"Nokia\"\r\n},\r\n{\r\n  Brand_id : 2,\r\n  Brand_name:\"Real me\"\r\n}\r\n\r\n];\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\nget_brands_list(){\r\n\r\n return this.Brands_list;\r\n}\r\n  getUsers() {\r\n    return this.httpClient.get(`/backend/listOfBrands`).\r\n        pipe(\r\n           map((data: Brands[]) => {\r\n             return data;\r\n           }), catchError( error => {\r\n             return throwError( 'Something went wrong!' );\r\n           })\r\n        )\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\npanelOpenState = false;\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n<div class=\"container  \">\r\n<div class=\"jumbotron\">\r\n\r\n<mat-accordion>\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n <strong>Completed ! </strong> \r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n[ 12/12/2010 ]\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n      Your HP Laptop has been repaired and ready to pick up. Please visit our shop to recive your package. Thank you so much for reaching us.\r\n \r\n  </mat-expansion-panel>\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n <strong>On Progress! </strong> \r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n[ 12/12/2010 ]\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n           Your HP Laptop is under repairing. We will let you know once it's been repaired.\r\n\r\n \r\n  </mat-expansion-panel>\r\n\r\n\r\n  <mat-expansion-panel (opened)=\"panelOpenState = true\"\r\n                       (closed)=\"panelOpenState = false\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n <strong>On Checking ! </strong> \r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n[ 10/12/2010 ]\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n      Your HP Laptop is checking by our technitian. We will let you know once we start the repairing.\r\n      Thank you for your coorperation.\r\n \r\n  </mat-expansion-panel>\r\n\r\n</mat-accordion>\r\n\r\n \r\n\r\n\r\n\r\n\r\n</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './Dk/home/home.component';\r\n import { RepairComponent } from './Dk/repair/repair.component';\r\nimport { ProfileComponent } from './Dk/profile/profile.component';\r\nimport { ContactComponent } from './Dk/contact/contact.component';\r\nimport { NotificationsComponent } from './Dk/notifications/notifications.component';\r\nimport { HistoryComponent } from './Dk/history/history.component';\r\nimport { TrackComponent } from './Dk/track/track.component';\r\n//import { LoginComponent } from './Dk/login/login.component';\r\nimport { LoginComponent } from './UG/login/login.component';\r\nimport { PartsComponent } from './Dk/parts/parts.component';\r\nimport { SuccessandfailureComponent } from './Dk/successandfailure/successandfailure.component';\r\nimport { ForgotpasswordComponent } from './UG/forgotpassword/forgotpassword.component';\r\n\r\nconst routes: Routes = [\r\n{ path: '', component: LoginComponent, pathMatch: 'full' },\r\n{ path: 'Login', component: LoginComponent, pathMatch: 'full' },\r\n{ path: 'Repair', component: RepairComponent, pathMatch: 'full' },\r\n{ path: 'Profile', component: ProfileComponent, pathMatch: 'full' },\r\n{ path: 'Contact', component: ContactComponent, pathMatch: 'full' },\r\n{ path: 'Tracking', component: TrackComponent, pathMatch: 'full' },\r\n{ path: 'Parts', component: PartsComponent, pathMatch: 'full' },\r\n{ path: 'Login', component: LoginComponent, pathMatch: 'full' },\r\n{ path: 'Notifications', component: NotificationsComponent, pathMatch: 'full' },\r\n{ path: 'History', component: HistoryComponent, pathMatch: 'full' },\r\n{ path: 'Dashboard', component: HomeComponent, pathMatch: 'full' },\r\n{path:'Successorfailure',component:SuccessandfailureComponent, pathMatch: 'full'},\r\n{path:'Forgotpassword',component:ForgotpasswordComponent, pathMatch: 'full'}\r\n\r\n];\r\n \r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as $ from 'jquery';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { NgZone } from '@angular/core';\r\nimport { SocialAuthService } from 'angularx-social-login';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  login:boolean;\r\n\r\n  constructor (private zone: NgZone, private router: Router,private authService: SocialAuthService) {\r\n    this.router.events.subscribe((event: any) => {\r\n      if (event instanceof NavigationEnd) {\r\n        if (event.url === '/Login'|| event.url === '/' || event.url === '/Forgotpassword' ) {\r\n          //console.log(\"true\");\r\n          this.login= true;\r\n        } else {\r\n         // console.log(\"false\");\r\n          this.login= false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n  signOut(): void {\r\n    this.authService.signOut();\r\n    localStorage.removeItem('*');\r\n    sessionStorage.clear();\r\n    this.router.navigate(['']);\r\n  }\r\n  \r\n\r\n}\r\n","<nav class=\"navbar navbar-inverse\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"navbar-header\">\r\n      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n      <span class=\"icon-bar\"></span>\r\n      <span class=\"icon-bar\"></span>\r\n      <span class=\"icon-bar\"></span>\r\n      </button>\r\n      <a class=\"navbar-brand\" href=\"#\"><span class=\"glyphicon glyphicon-wrench \r\n      \"></span>\r\n      BW | Repair Application  </a>  \r\n    </div>\r\n<div *ngIf=\"!login\">\r\n      <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n      <ul class=\"nav navbar-nav\"> \r\n      <li> \r\n        <a routerLink=\"Dashboard\"> <span class=\"glyphicon glyphicon-tree-conifer\"></span> Dashboard</a>\r\n      </li>\r\n      <li>\r\n        <a routerLink=\"Profile\"> <span class=\"glyphicon glyphicon-user\"></span> Profile\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a  routerLink=\"Notifications\"> <span class=\"glyphicon glyphicon-bell\"></span>\r\n          <span matBadge=\"4\" matBadgeOverlap=\"false\">Alerts</span>\r\n      </a>\r\n      </li>\r\n      <li>\r\n        <a routerLink=\"History\"> <span class=\"glyphicon glyphicon-book\"></span> History\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a routerLink=\"Repair\"> <span class=\"glyphicon glyphicon-export\"></span> Repair request\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a routerLink=\"Tracking\"> <span class=\"glyphicon glyphicon-time\"></span> Track order\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a routerLink=\"Parts\"> <span class=\"glyphicon glyphicon-tower\"></span> Buy parts\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"https://blackwhitetechnologies.com/\" target=\"_blank\"> \r\n          <span class=\"glyphicon glyphicon-shopping-cart\"></span> Shopping\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a routerLink=\"Contact\"> <span class=\"glyphicon glyphicon-phone-alt\"></span> Contact\r\n        </a>\r\n      </li>\r\n      <li>\r\n        \r\n        <a routerLink=\"Login\">Log out <span class=\"glyphicon glyphicon-log-out\" (click)=\"signOut()\"></span>\r\n        </a>\r\n      </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</nav> ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (!/localhost/.test(document.location.host)) { enableProdMode(); }\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reset-password works!</p>\n"],"sourceRoot":"webpack:///"}